// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.7.1
// source: types/basic.proto

package types

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Address struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *Address) Reset() {
	*x = Address{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_basic_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Address) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Address) ProtoMessage() {}

func (x *Address) ProtoReflect() protoreflect.Message {
	mi := &file_types_basic_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Address.ProtoReflect.Descriptor instead.
func (*Address) Descriptor() ([]byte, []int) {
	return file_types_basic_proto_rawDescGZIP(), []int{0}
}

func (x *Address) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type Hash struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hash string `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
}

func (x *Hash) Reset() {
	*x = Hash{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_basic_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Hash) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Hash) ProtoMessage() {}

func (x *Hash) ProtoReflect() protoreflect.Message {
	mi := &file_types_basic_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Hash.ProtoReflect.Descriptor instead.
func (*Hash) Descriptor() ([]byte, []int) {
	return file_types_basic_proto_rawDescGZIP(), []int{1}
}

func (x *Hash) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

type Balance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Balance int64 `protobuf:"varint,1,opt,name=balance,proto3" json:"balance,omitempty"`
}

func (x *Balance) Reset() {
	*x = Balance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_basic_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Balance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Balance) ProtoMessage() {}

func (x *Balance) ProtoReflect() protoreflect.Message {
	mi := &file_types_basic_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Balance.ProtoReflect.Descriptor instead.
func (*Balance) Descriptor() ([]byte, []int) {
	return file_types_basic_proto_rawDescGZIP(), []int{2}
}

func (x *Balance) GetBalance() int64 {
	if x != nil {
		return x.Balance
	}
	return 0
}

type Signature struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signature string `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (x *Signature) Reset() {
	*x = Signature{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_basic_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Signature) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Signature) ProtoMessage() {}

func (x *Signature) ProtoReflect() protoreflect.Message {
	mi := &file_types_basic_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Signature.ProtoReflect.Descriptor instead.
func (*Signature) Descriptor() ([]byte, []int) {
	return file_types_basic_proto_rawDescGZIP(), []int{3}
}

func (x *Signature) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

type StateBlock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type           string   `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Token          string   `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	Address        string   `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	Balance        int64    `protobuf:"varint,4,opt,name=balance,proto3" json:"balance,omitempty"`
	Vote           int64    `protobuf:"varint,5,opt,name=vote,proto3" json:"vote,omitempty"`
	Network        int64    `protobuf:"varint,6,opt,name=network,proto3" json:"network,omitempty"`
	Storage        int64    `protobuf:"varint,7,opt,name=storage,proto3" json:"storage,omitempty"`
	Oracle         int64    `protobuf:"varint,8,opt,name=oracle,proto3" json:"oracle,omitempty"`
	Previous       string   `protobuf:"bytes,9,opt,name=previous,proto3" json:"previous,omitempty"`
	Link           string   `protobuf:"bytes,10,opt,name=link,proto3" json:"link,omitempty"`
	Sender         []byte   `protobuf:"bytes,11,opt,name=sender,proto3" json:"sender,omitempty"`
	Receiver       []byte   `protobuf:"bytes,12,opt,name=receiver,proto3" json:"receiver,omitempty"`
	Message        string   `protobuf:"bytes,13,opt,name=message,proto3" json:"message,omitempty"`
	Data           []byte   `protobuf:"bytes,14,opt,name=data,proto3" json:"data,omitempty"`
	PoVHeight      uint64   `protobuf:"varint,15,opt,name=poVHeight,proto3" json:"poVHeight,omitempty"`
	Timestamp      int64    `protobuf:"varint,16,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Extra          string   `protobuf:"bytes,17,opt,name=extra,proto3" json:"extra,omitempty"`
	Representative string   `protobuf:"bytes,18,opt,name=representative,proto3" json:"representative,omitempty"`
	PrivateFrom    string   `protobuf:"bytes,19,opt,name=privateFrom,proto3" json:"privateFrom,omitempty"`
	PrivateFor     []string `protobuf:"bytes,20,rep,name=privateFor,proto3" json:"privateFor,omitempty"`
	PrivateGroupID string   `protobuf:"bytes,21,opt,name=privateGroupID,proto3" json:"privateGroupID,omitempty"`
	Work           uint64   `protobuf:"varint,22,opt,name=work,proto3" json:"work,omitempty"`
	Signature      string   `protobuf:"bytes,23,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (x *StateBlock) Reset() {
	*x = StateBlock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_basic_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateBlock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateBlock) ProtoMessage() {}

func (x *StateBlock) ProtoReflect() protoreflect.Message {
	mi := &file_types_basic_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateBlock.ProtoReflect.Descriptor instead.
func (*StateBlock) Descriptor() ([]byte, []int) {
	return file_types_basic_proto_rawDescGZIP(), []int{4}
}

func (x *StateBlock) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *StateBlock) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *StateBlock) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *StateBlock) GetBalance() int64 {
	if x != nil {
		return x.Balance
	}
	return 0
}

func (x *StateBlock) GetVote() int64 {
	if x != nil {
		return x.Vote
	}
	return 0
}

func (x *StateBlock) GetNetwork() int64 {
	if x != nil {
		return x.Network
	}
	return 0
}

func (x *StateBlock) GetStorage() int64 {
	if x != nil {
		return x.Storage
	}
	return 0
}

func (x *StateBlock) GetOracle() int64 {
	if x != nil {
		return x.Oracle
	}
	return 0
}

func (x *StateBlock) GetPrevious() string {
	if x != nil {
		return x.Previous
	}
	return ""
}

func (x *StateBlock) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

func (x *StateBlock) GetSender() []byte {
	if x != nil {
		return x.Sender
	}
	return nil
}

func (x *StateBlock) GetReceiver() []byte {
	if x != nil {
		return x.Receiver
	}
	return nil
}

func (x *StateBlock) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *StateBlock) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *StateBlock) GetPoVHeight() uint64 {
	if x != nil {
		return x.PoVHeight
	}
	return 0
}

func (x *StateBlock) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *StateBlock) GetExtra() string {
	if x != nil {
		return x.Extra
	}
	return ""
}

func (x *StateBlock) GetRepresentative() string {
	if x != nil {
		return x.Representative
	}
	return ""
}

func (x *StateBlock) GetPrivateFrom() string {
	if x != nil {
		return x.PrivateFrom
	}
	return ""
}

func (x *StateBlock) GetPrivateFor() []string {
	if x != nil {
		return x.PrivateFor
	}
	return nil
}

func (x *StateBlock) GetPrivateGroupID() string {
	if x != nil {
		return x.PrivateGroupID
	}
	return ""
}

func (x *StateBlock) GetWork() uint64 {
	if x != nil {
		return x.Work
	}
	return 0
}

func (x *StateBlock) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

type TokenMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type           string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Header         string `protobuf:"bytes,2,opt,name=header,proto3" json:"header,omitempty"`
	Representative string `protobuf:"bytes,3,opt,name=representative,proto3" json:"representative,omitempty"`
	OpenBlock      string `protobuf:"bytes,4,opt,name=openBlock,proto3" json:"openBlock,omitempty"`
	Balance        int64  `protobuf:"varint,5,opt,name=balance,proto3" json:"balance,omitempty"`
	BelongTo       string `protobuf:"bytes,6,opt,name=belongTo,proto3" json:"belongTo,omitempty"`
	Modified       int64  `protobuf:"varint,7,opt,name=modified,proto3" json:"modified,omitempty"`
	BlockCount     int64  `protobuf:"varint,8,opt,name=blockCount,proto3" json:"blockCount,omitempty"`
}

func (x *TokenMeta) Reset() {
	*x = TokenMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_basic_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokenMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenMeta) ProtoMessage() {}

func (x *TokenMeta) ProtoReflect() protoreflect.Message {
	mi := &file_types_basic_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenMeta.ProtoReflect.Descriptor instead.
func (*TokenMeta) Descriptor() ([]byte, []int) {
	return file_types_basic_proto_rawDescGZIP(), []int{5}
}

func (x *TokenMeta) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *TokenMeta) GetHeader() string {
	if x != nil {
		return x.Header
	}
	return ""
}

func (x *TokenMeta) GetRepresentative() string {
	if x != nil {
		return x.Representative
	}
	return ""
}

func (x *TokenMeta) GetOpenBlock() string {
	if x != nil {
		return x.OpenBlock
	}
	return ""
}

func (x *TokenMeta) GetBalance() int64 {
	if x != nil {
		return x.Balance
	}
	return 0
}

func (x *TokenMeta) GetBelongTo() string {
	if x != nil {
		return x.BelongTo
	}
	return ""
}

func (x *TokenMeta) GetModified() int64 {
	if x != nil {
		return x.Modified
	}
	return 0
}

func (x *TokenMeta) GetBlockCount() int64 {
	if x != nil {
		return x.BlockCount
	}
	return 0
}

type AccountMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address     string       `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	CoinBalance int64        `protobuf:"varint,2,opt,name=coinBalance,proto3" json:"coinBalance,omitempty"`
	CoinVote    int64        `protobuf:"varint,3,opt,name=coinVote,proto3" json:"coinVote,omitempty"`
	CoinNetwork int64        `protobuf:"varint,4,opt,name=coinNetwork,proto3" json:"coinNetwork,omitempty"`
	CoinStorage int64        `protobuf:"varint,5,opt,name=coinStorage,proto3" json:"coinStorage,omitempty"`
	CoinOracle  int64        `protobuf:"varint,6,opt,name=coinOracle,proto3" json:"coinOracle,omitempty"`
	Tokens      []*TokenMeta `protobuf:"bytes,7,rep,name=tokens,proto3" json:"tokens,omitempty"`
}

func (x *AccountMeta) Reset() {
	*x = AccountMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_basic_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountMeta) ProtoMessage() {}

func (x *AccountMeta) ProtoReflect() protoreflect.Message {
	mi := &file_types_basic_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountMeta.ProtoReflect.Descriptor instead.
func (*AccountMeta) Descriptor() ([]byte, []int) {
	return file_types_basic_proto_rawDescGZIP(), []int{6}
}

func (x *AccountMeta) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *AccountMeta) GetCoinBalance() int64 {
	if x != nil {
		return x.CoinBalance
	}
	return 0
}

func (x *AccountMeta) GetCoinVote() int64 {
	if x != nil {
		return x.CoinVote
	}
	return 0
}

func (x *AccountMeta) GetCoinNetwork() int64 {
	if x != nil {
		return x.CoinNetwork
	}
	return 0
}

func (x *AccountMeta) GetCoinStorage() int64 {
	if x != nil {
		return x.CoinStorage
	}
	return 0
}

func (x *AccountMeta) GetCoinOracle() int64 {
	if x != nil {
		return x.CoinOracle
	}
	return 0
}

func (x *AccountMeta) GetTokens() []*TokenMeta {
	if x != nil {
		return x.Tokens
	}
	return nil
}

type Benefit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Balance int64 `protobuf:"varint,1,opt,name=balance,proto3" json:"balance,omitempty"`
	Vote    int64 `protobuf:"varint,2,opt,name=vote,proto3" json:"vote,omitempty"`
	Network int64 `protobuf:"varint,3,opt,name=network,proto3" json:"network,omitempty"`
	Storage int64 `protobuf:"varint,4,opt,name=storage,proto3" json:"storage,omitempty"`
	Oracle  int64 `protobuf:"varint,5,opt,name=oracle,proto3" json:"oracle,omitempty"`
	Total   int64 `protobuf:"varint,6,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *Benefit) Reset() {
	*x = Benefit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_basic_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Benefit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Benefit) ProtoMessage() {}

func (x *Benefit) ProtoReflect() protoreflect.Message {
	mi := &file_types_basic_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Benefit.ProtoReflect.Descriptor instead.
func (*Benefit) Descriptor() ([]byte, []int) {
	return file_types_basic_proto_rawDescGZIP(), []int{7}
}

func (x *Benefit) GetBalance() int64 {
	if x != nil {
		return x.Balance
	}
	return 0
}

func (x *Benefit) GetVote() int64 {
	if x != nil {
		return x.Vote
	}
	return 0
}

func (x *Benefit) GetNetwork() int64 {
	if x != nil {
		return x.Network
	}
	return 0
}

func (x *Benefit) GetStorage() int64 {
	if x != nil {
		return x.Storage
	}
	return 0
}

func (x *Benefit) GetOracle() int64 {
	if x != nil {
		return x.Oracle
	}
	return 0
}

func (x *Benefit) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type TokenInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TokenId       string `protobuf:"bytes,1,opt,name=tokenId,proto3" json:"tokenId,omitempty"`
	TokenName     string `protobuf:"bytes,2,opt,name=tokenName,proto3" json:"tokenName,omitempty"`
	TokenSymbol   string `protobuf:"bytes,3,opt,name=tokenSymbol,proto3" json:"tokenSymbol,omitempty"`
	TotalSupply   int64  `protobuf:"varint,4,opt,name=totalSupply,proto3" json:"totalSupply,omitempty"`
	Decimals      int32  `protobuf:"varint,5,opt,name=decimals,proto3" json:"decimals,omitempty"`
	Owner         string `protobuf:"bytes,6,opt,name=owner,proto3" json:"owner,omitempty"`
	PledgeAmount  int64  `protobuf:"varint,7,opt,name=pledgeAmount,proto3" json:"pledgeAmount,omitempty"`
	WithdrawTime  int64  `protobuf:"varint,8,opt,name=withdrawTime,proto3" json:"withdrawTime,omitempty"`
	PledgeAddress string `protobuf:"bytes,9,opt,name=pledgeAddress,proto3" json:"pledgeAddress,omitempty"`
	NEP5TxId      string `protobuf:"bytes,10,opt,name=NEP5TxId,proto3" json:"NEP5TxId,omitempty"`
}

func (x *TokenInfo) Reset() {
	*x = TokenInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_basic_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokenInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenInfo) ProtoMessage() {}

func (x *TokenInfo) ProtoReflect() protoreflect.Message {
	mi := &file_types_basic_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenInfo.ProtoReflect.Descriptor instead.
func (*TokenInfo) Descriptor() ([]byte, []int) {
	return file_types_basic_proto_rawDescGZIP(), []int{8}
}

func (x *TokenInfo) GetTokenId() string {
	if x != nil {
		return x.TokenId
	}
	return ""
}

func (x *TokenInfo) GetTokenName() string {
	if x != nil {
		return x.TokenName
	}
	return ""
}

func (x *TokenInfo) GetTokenSymbol() string {
	if x != nil {
		return x.TokenSymbol
	}
	return ""
}

func (x *TokenInfo) GetTotalSupply() int64 {
	if x != nil {
		return x.TotalSupply
	}
	return 0
}

func (x *TokenInfo) GetDecimals() int32 {
	if x != nil {
		return x.Decimals
	}
	return 0
}

func (x *TokenInfo) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *TokenInfo) GetPledgeAmount() int64 {
	if x != nil {
		return x.PledgeAmount
	}
	return 0
}

func (x *TokenInfo) GetWithdrawTime() int64 {
	if x != nil {
		return x.WithdrawTime
	}
	return 0
}

func (x *TokenInfo) GetPledgeAddress() string {
	if x != nil {
		return x.PledgeAddress
	}
	return ""
}

func (x *TokenInfo) GetNEP5TxId() string {
	if x != nil {
		return x.NEP5TxId
	}
	return ""
}

type PendingKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Hash    string `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
}

func (x *PendingKey) Reset() {
	*x = PendingKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_basic_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PendingKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PendingKey) ProtoMessage() {}

func (x *PendingKey) ProtoReflect() protoreflect.Message {
	mi := &file_types_basic_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PendingKey.ProtoReflect.Descriptor instead.
func (*PendingKey) Descriptor() ([]byte, []int) {
	return file_types_basic_proto_rawDescGZIP(), []int{9}
}

func (x *PendingKey) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *PendingKey) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

//go:generate msgp
type PendingInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Source string `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
	Amount int64  `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
	Type   string `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *PendingInfo) Reset() {
	*x = PendingInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_basic_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PendingInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PendingInfo) ProtoMessage() {}

func (x *PendingInfo) ProtoReflect() protoreflect.Message {
	mi := &file_types_basic_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PendingInfo.ProtoReflect.Descriptor instead.
func (*PendingInfo) Descriptor() ([]byte, []int) {
	return file_types_basic_proto_rawDescGZIP(), []int{10}
}

func (x *PendingInfo) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *PendingInfo) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *PendingInfo) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type StateBlocks struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StateBlocks []*StateBlock `protobuf:"bytes,1,rep,name=stateBlocks,proto3" json:"stateBlocks,omitempty"`
}

func (x *StateBlocks) Reset() {
	*x = StateBlocks{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_basic_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateBlocks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateBlocks) ProtoMessage() {}

func (x *StateBlocks) ProtoReflect() protoreflect.Message {
	mi := &file_types_basic_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateBlocks.ProtoReflect.Descriptor instead.
func (*StateBlocks) Descriptor() ([]byte, []int) {
	return file_types_basic_proto_rawDescGZIP(), []int{11}
}

func (x *StateBlocks) GetStateBlocks() []*StateBlock {
	if x != nil {
		return x.StateBlocks
	}
	return nil
}

type TokenInfos struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TokenInfos []*TokenInfo `protobuf:"bytes,1,rep,name=tokenInfos,proto3" json:"tokenInfos,omitempty"`
}

func (x *TokenInfos) Reset() {
	*x = TokenInfos{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_basic_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokenInfos) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenInfos) ProtoMessage() {}

func (x *TokenInfos) ProtoReflect() protoreflect.Message {
	mi := &file_types_basic_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenInfos.ProtoReflect.Descriptor instead.
func (*TokenInfos) Descriptor() ([]byte, []int) {
	return file_types_basic_proto_rawDescGZIP(), []int{12}
}

func (x *TokenInfos) GetTokenInfos() []*TokenInfo {
	if x != nil {
		return x.TokenInfos
	}
	return nil
}

type Addresses struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Addresses []string `protobuf:"bytes,1,rep,name=addresses,proto3" json:"addresses,omitempty"`
}

func (x *Addresses) Reset() {
	*x = Addresses{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_basic_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Addresses) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Addresses) ProtoMessage() {}

func (x *Addresses) ProtoReflect() protoreflect.Message {
	mi := &file_types_basic_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Addresses.ProtoReflect.Descriptor instead.
func (*Addresses) Descriptor() ([]byte, []int) {
	return file_types_basic_proto_rawDescGZIP(), []int{13}
}

func (x *Addresses) GetAddresses() []string {
	if x != nil {
		return x.Addresses
	}
	return nil
}

type Hashes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hashes []string `protobuf:"bytes,1,rep,name=hashes,proto3" json:"hashes,omitempty"`
}

func (x *Hashes) Reset() {
	*x = Hashes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_basic_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Hashes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Hashes) ProtoMessage() {}

func (x *Hashes) ProtoReflect() protoreflect.Message {
	mi := &file_types_basic_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Hashes.ProtoReflect.Descriptor instead.
func (*Hashes) Descriptor() ([]byte, []int) {
	return file_types_basic_proto_rawDescGZIP(), []int{14}
}

func (x *Hashes) GetHashes() []string {
	if x != nil {
		return x.Hashes
	}
	return nil
}

var File_types_basic_proto protoreflect.FileDescriptor

var file_types_basic_proto_rawDesc = []byte{
	0x0a, 0x11, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x62, 0x61, 0x73, 0x69, 0x63, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x05, 0x74, 0x79, 0x70, 0x65, 0x73, 0x22, 0x23, 0x0a, 0x07, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22,
	0x1a, 0x0a, 0x04, 0x48, 0x61, 0x73, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x22, 0x23, 0x0a, 0x07, 0x42,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x22, 0x29, 0x0a, 0x09, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0xf2, 0x04, 0x0a, 0x0a,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x76, 0x6f, 0x74, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x76, 0x6f, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x65, 0x76,
	0x69, 0x6f, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x65, 0x76,
	0x69, 0x6f, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x6f,
	0x56, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x70,
	0x6f, 0x56, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18,
	0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x12, 0x26, 0x0a, 0x0e,
	0x72, 0x65, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x76, 0x65, 0x18, 0x12,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x65, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x61,
	0x74, 0x69, 0x76, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x46,
	0x72, 0x6f, 0x6d, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x69, 0x76, 0x61,
	0x74, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74,
	0x65, 0x46, 0x6f, 0x72, 0x18, 0x14, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x69, 0x76,
	0x61, 0x74, 0x65, 0x46, 0x6f, 0x72, 0x12, 0x26, 0x0a, 0x0e, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74,
	0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x12, 0x12,
	0x0a, 0x04, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x16, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x77, 0x6f,
	0x72, 0x6b, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18,
	0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x22, 0xef, 0x01, 0x0a, 0x09, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x26, 0x0a, 0x0e, 0x72, 0x65,
	0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x76, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x72, 0x65, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69,
	0x76, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x6e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x6e, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x65,
	0x6c, 0x6f, 0x6e, 0x67, 0x54, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x65,
	0x6c, 0x6f, 0x6e, 0x67, 0x54, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69,
	0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69,
	0x65, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x22, 0xf3, 0x01, 0x0a, 0x0b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4d, 0x65,
	0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x20, 0x0a, 0x0b,
	0x63, 0x6f, 0x69, 0x6e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0b, 0x63, 0x6f, 0x69, 0x6e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x63, 0x6f, 0x69, 0x6e, 0x56, 0x6f, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x63, 0x6f, 0x69, 0x6e, 0x56, 0x6f, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f,
	0x69, 0x6e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0b, 0x63, 0x6f, 0x69, 0x6e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x20, 0x0a, 0x0b,
	0x63, 0x6f, 0x69, 0x6e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0b, 0x63, 0x6f, 0x69, 0x6e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x63, 0x6f, 0x69, 0x6e, 0x4f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x63, 0x6f, 0x69, 0x6e, 0x4f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x12, 0x28,
	0x0a, 0x06, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x4d, 0x65, 0x74, 0x61,
	0x52, 0x06, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x22, 0x99, 0x01, 0x0a, 0x07, 0x42, 0x65, 0x6e,
	0x65, 0x66, 0x69, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x76, 0x6f, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x76, 0x6f,
	0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x22, 0xc3, 0x02, 0x0a, 0x09, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x20, 0x0a, 0x0b,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x12, 0x1a,
	0x0a, 0x08, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77,
	0x6e, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72,
	0x12, 0x22, 0x0a, 0x0c, 0x70, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x70, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x77, 0x69, 0x74, 0x68,
	0x64, 0x72, 0x61, 0x77, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x70, 0x6c, 0x65, 0x64,
	0x67, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x70, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1a,
	0x0a, 0x08, 0x4e, 0x45, 0x50, 0x35, 0x54, 0x78, 0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x4e, 0x45, 0x50, 0x35, 0x54, 0x78, 0x49, 0x64, 0x22, 0x3a, 0x0a, 0x0a, 0x50, 0x65,
	0x6e, 0x64, 0x69, 0x6e, 0x67, 0x4b, 0x65, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x22, 0x51, 0x0a, 0x0b, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x42, 0x0a, 0x0b, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x12, 0x33, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x52, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x22, 0x3e, 0x0a,
	0x0a, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x30, 0x0a, 0x0a, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x0a, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0x29, 0x0a,
	0x09, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x22, 0x20, 0x0a, 0x06, 0x48, 0x61, 0x73, 0x68,
	0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x61, 0x73, 0x68, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x06, 0x68, 0x61, 0x73, 0x68, 0x65, 0x73, 0x42, 0x37, 0x5a, 0x35, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x71, 0x6c, 0x63, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x2f, 0x67, 0x6f, 0x2d, 0x71, 0x6c, 0x63, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x67, 0x72, 0x70,
	0x63, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x3b, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_types_basic_proto_rawDescOnce sync.Once
	file_types_basic_proto_rawDescData = file_types_basic_proto_rawDesc
)

func file_types_basic_proto_rawDescGZIP() []byte {
	file_types_basic_proto_rawDescOnce.Do(func() {
		file_types_basic_proto_rawDescData = protoimpl.X.CompressGZIP(file_types_basic_proto_rawDescData)
	})
	return file_types_basic_proto_rawDescData
}

var file_types_basic_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_types_basic_proto_goTypes = []interface{}{
	(*Address)(nil),     // 0: types.Address
	(*Hash)(nil),        // 1: types.Hash
	(*Balance)(nil),     // 2: types.Balance
	(*Signature)(nil),   // 3: types.Signature
	(*StateBlock)(nil),  // 4: types.StateBlock
	(*TokenMeta)(nil),   // 5: types.TokenMeta
	(*AccountMeta)(nil), // 6: types.AccountMeta
	(*Benefit)(nil),     // 7: types.Benefit
	(*TokenInfo)(nil),   // 8: types.TokenInfo
	(*PendingKey)(nil),  // 9: types.PendingKey
	(*PendingInfo)(nil), // 10: types.PendingInfo
	(*StateBlocks)(nil), // 11: types.StateBlocks
	(*TokenInfos)(nil),  // 12: types.TokenInfos
	(*Addresses)(nil),   // 13: types.Addresses
	(*Hashes)(nil),      // 14: types.Hashes
}
var file_types_basic_proto_depIdxs = []int32{
	5, // 0: types.AccountMeta.tokens:type_name -> types.TokenMeta
	4, // 1: types.StateBlocks.stateBlocks:type_name -> types.StateBlock
	8, // 2: types.TokenInfos.tokenInfos:type_name -> types.TokenInfo
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_types_basic_proto_init() }
func file_types_basic_proto_init() {
	if File_types_basic_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_types_basic_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Address); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_basic_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Hash); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_basic_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Balance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_basic_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Signature); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_basic_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StateBlock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_basic_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TokenMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_basic_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_basic_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Benefit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_basic_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TokenInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_basic_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PendingKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_basic_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PendingInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_basic_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StateBlocks); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_basic_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TokenInfos); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_basic_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Addresses); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_basic_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Hashes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_types_basic_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_types_basic_proto_goTypes,
		DependencyIndexes: file_types_basic_proto_depIdxs,
		MessageInfos:      file_types_basic_proto_msgTypes,
	}.Build()
	File_types_basic_proto = out.File
	file_types_basic_proto_rawDesc = nil
	file_types_basic_proto_goTypes = nil
	file_types_basic_proto_depIdxs = nil
}
