// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.7.1
// source: types/pov.proto

package types

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type PovVerifierState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalVerify  uint64            `protobuf:"varint,1,opt,name=totalVerify,proto3" json:"totalVerify,omitempty"`
	TotalReward  int64             `protobuf:"varint,2,opt,name=totalReward,proto3" json:"totalReward,omitempty"`
	ActiveHeight map[string]uint64 `protobuf:"bytes,3,rep,name=activeHeight,proto3" json:"activeHeight,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *PovVerifierState) Reset() {
	*x = PovVerifierState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_pov_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PovVerifierState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PovVerifierState) ProtoMessage() {}

func (x *PovVerifierState) ProtoReflect() protoreflect.Message {
	mi := &file_types_pov_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PovVerifierState.ProtoReflect.Descriptor instead.
func (*PovVerifierState) Descriptor() ([]byte, []int) {
	return file_types_pov_proto_rawDescGZIP(), []int{0}
}

func (x *PovVerifierState) GetTotalVerify() uint64 {
	if x != nil {
		return x.TotalVerify
	}
	return 0
}

func (x *PovVerifierState) GetTotalReward() int64 {
	if x != nil {
		return x.TotalReward
	}
	return 0
}

func (x *PovVerifierState) GetActiveHeight() map[string]uint64 {
	if x != nil {
		return x.ActiveHeight
	}
	return nil
}

type PovPublishState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OracleAccounts []string `protobuf:"bytes,1,rep,name=oracleAccounts,proto3" json:"oracleAccounts,omitempty"`
	PublishHeight  uint64   `protobuf:"varint,2,opt,name=publishHeight,proto3" json:"publishHeight,omitempty"`
	VerifiedHeight uint64   `protobuf:"varint,3,opt,name=verifiedHeight,proto3" json:"verifiedHeight,omitempty"`
	VerifiedStatus int32    `protobuf:"varint,4,opt,name=verifiedStatus,proto3" json:"verifiedStatus,omitempty"`
	BonusFee       int64    `protobuf:"varint,5,opt,name=bonusFee,proto3" json:"bonusFee,omitempty"`
}

func (x *PovPublishState) Reset() {
	*x = PovPublishState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_pov_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PovPublishState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PovPublishState) ProtoMessage() {}

func (x *PovPublishState) ProtoReflect() protoreflect.Message {
	mi := &file_types_pov_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PovPublishState.ProtoReflect.Descriptor instead.
func (*PovPublishState) Descriptor() ([]byte, []int) {
	return file_types_pov_proto_rawDescGZIP(), []int{1}
}

func (x *PovPublishState) GetOracleAccounts() []string {
	if x != nil {
		return x.OracleAccounts
	}
	return nil
}

func (x *PovPublishState) GetPublishHeight() uint64 {
	if x != nil {
		return x.PublishHeight
	}
	return 0
}

func (x *PovPublishState) GetVerifiedHeight() uint64 {
	if x != nil {
		return x.VerifiedHeight
	}
	return 0
}

func (x *PovPublishState) GetVerifiedStatus() int32 {
	if x != nil {
		return x.VerifiedStatus
	}
	return 0
}

func (x *PovPublishState) GetBonusFee() int64 {
	if x != nil {
		return x.BonusFee
	}
	return 0
}

type PovRepState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account string `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	Balance int64  `protobuf:"varint,2,opt,name=balance,proto3" json:"balance,omitempty"`
	Vote    int64  `protobuf:"varint,3,opt,name=vote,proto3" json:"vote,omitempty"`
	Network int64  `protobuf:"varint,4,opt,name=network,proto3" json:"network,omitempty"`
	Storage int64  `protobuf:"varint,5,opt,name=storage,proto3" json:"storage,omitempty"`
	Oracle  int64  `protobuf:"varint,6,opt,name=oracle,proto3" json:"oracle,omitempty"`
	Total   int64  `protobuf:"varint,7,opt,name=total,proto3" json:"total,omitempty"`
	Status  uint32 `protobuf:"varint,8,opt,name=status,proto3" json:"status,omitempty"`
	Height  uint64 `protobuf:"varint,9,opt,name=height,proto3" json:"height,omitempty"`
}

func (x *PovRepState) Reset() {
	*x = PovRepState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_pov_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PovRepState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PovRepState) ProtoMessage() {}

func (x *PovRepState) ProtoReflect() protoreflect.Message {
	mi := &file_types_pov_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PovRepState.ProtoReflect.Descriptor instead.
func (*PovRepState) Descriptor() ([]byte, []int) {
	return file_types_pov_proto_rawDescGZIP(), []int{2}
}

func (x *PovRepState) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *PovRepState) GetBalance() int64 {
	if x != nil {
		return x.Balance
	}
	return 0
}

func (x *PovRepState) GetVote() int64 {
	if x != nil {
		return x.Vote
	}
	return 0
}

func (x *PovRepState) GetNetwork() int64 {
	if x != nil {
		return x.Network
	}
	return 0
}

func (x *PovRepState) GetStorage() int64 {
	if x != nil {
		return x.Storage
	}
	return 0
}

func (x *PovRepState) GetOracle() int64 {
	if x != nil {
		return x.Oracle
	}
	return 0
}

func (x *PovRepState) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *PovRepState) GetStatus() uint32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *PovRepState) GetHeight() uint64 {
	if x != nil {
		return x.Height
	}
	return 0
}

type PovRepStates struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	States []*PovRepState `protobuf:"bytes,1,rep,name=states,proto3" json:"states,omitempty"`
}

func (x *PovRepStates) Reset() {
	*x = PovRepStates{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_pov_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PovRepStates) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PovRepStates) ProtoMessage() {}

func (x *PovRepStates) ProtoReflect() protoreflect.Message {
	mi := &file_types_pov_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PovRepStates.ProtoReflect.Descriptor instead.
func (*PovRepStates) Descriptor() ([]byte, []int) {
	return file_types_pov_proto_rawDescGZIP(), []int{3}
}

func (x *PovRepStates) GetStates() []*PovRepState {
	if x != nil {
		return x.States
	}
	return nil
}

type PovHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BasHdr *PovBaseHeader `protobuf:"bytes,1,opt,name=basHdr,proto3" json:"basHdr,omitempty"`
	AuxHdr *PovAuxHeader  `protobuf:"bytes,2,opt,name=auxHdr,proto3" json:"auxHdr,omitempty"`
	CbTx   *PovCoinBaseTx `protobuf:"bytes,3,opt,name=cbTx,proto3" json:"cbTx,omitempty"`
}

func (x *PovHeader) Reset() {
	*x = PovHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_pov_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PovHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PovHeader) ProtoMessage() {}

func (x *PovHeader) ProtoReflect() protoreflect.Message {
	mi := &file_types_pov_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PovHeader.ProtoReflect.Descriptor instead.
func (*PovHeader) Descriptor() ([]byte, []int) {
	return file_types_pov_proto_rawDescGZIP(), []int{4}
}

func (x *PovHeader) GetBasHdr() *PovBaseHeader {
	if x != nil {
		return x.BasHdr
	}
	return nil
}

func (x *PovHeader) GetAuxHdr() *PovAuxHeader {
	if x != nil {
		return x.AuxHdr
	}
	return nil
}

func (x *PovHeader) GetCbTx() *PovCoinBaseTx {
	if x != nil {
		return x.CbTx
	}
	return nil
}

type PovBaseHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version    uint32 `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	Previous   string `protobuf:"bytes,2,opt,name=previous,proto3" json:"previous,omitempty"`
	MerkleRoot string `protobuf:"bytes,3,opt,name=merkleRoot,proto3" json:"merkleRoot,omitempty"`
	Timestamp  uint32 `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Bits       uint32 `protobuf:"varint,5,opt,name=bits,proto3" json:"bits,omitempty"`
	Nonce      uint32 `protobuf:"varint,6,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Hash       string `protobuf:"bytes,7,opt,name=hash,proto3" json:"hash,omitempty"`
	Height     uint64 `protobuf:"varint,8,opt,name=height,proto3" json:"height,omitempty"`
}

func (x *PovBaseHeader) Reset() {
	*x = PovBaseHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_pov_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PovBaseHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PovBaseHeader) ProtoMessage() {}

func (x *PovBaseHeader) ProtoReflect() protoreflect.Message {
	mi := &file_types_pov_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PovBaseHeader.ProtoReflect.Descriptor instead.
func (*PovBaseHeader) Descriptor() ([]byte, []int) {
	return file_types_pov_proto_rawDescGZIP(), []int{5}
}

func (x *PovBaseHeader) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *PovBaseHeader) GetPrevious() string {
	if x != nil {
		return x.Previous
	}
	return ""
}

func (x *PovBaseHeader) GetMerkleRoot() string {
	if x != nil {
		return x.MerkleRoot
	}
	return ""
}

func (x *PovBaseHeader) GetTimestamp() uint32 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *PovBaseHeader) GetBits() uint32 {
	if x != nil {
		return x.Bits
	}
	return 0
}

func (x *PovBaseHeader) GetNonce() uint32 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *PovBaseHeader) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *PovBaseHeader) GetHeight() uint64 {
	if x != nil {
		return x.Height
	}
	return 0
}

type PovAuxHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuxMerkleBranch   []string      `protobuf:"bytes,1,rep,name=auxMerkleBranch,proto3" json:"auxMerkleBranch,omitempty"`
	AuxMerkleIndex    int32         `protobuf:"varint,2,opt,name=auxMerkleIndex,proto3" json:"auxMerkleIndex,omitempty"`
	ParCoinBaseTx     *PovBtcTx     `protobuf:"bytes,3,opt,name=parCoinBaseTx,proto3" json:"parCoinBaseTx,omitempty"`
	ParCoinBaseMerkle []string      `protobuf:"bytes,4,rep,name=parCoinBaseMerkle,proto3" json:"parCoinBaseMerkle,omitempty"`
	ParMerkleIndex    int32         `protobuf:"varint,5,opt,name=parMerkleIndex,proto3" json:"parMerkleIndex,omitempty"`
	ParBlockHeader    *PovBtcHeader `protobuf:"bytes,6,opt,name=parBlockHeader,proto3" json:"parBlockHeader,omitempty"`
	ParentHash        string        `protobuf:"bytes,7,opt,name=parentHash,proto3" json:"parentHash,omitempty"`
}

func (x *PovAuxHeader) Reset() {
	*x = PovAuxHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_pov_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PovAuxHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PovAuxHeader) ProtoMessage() {}

func (x *PovAuxHeader) ProtoReflect() protoreflect.Message {
	mi := &file_types_pov_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PovAuxHeader.ProtoReflect.Descriptor instead.
func (*PovAuxHeader) Descriptor() ([]byte, []int) {
	return file_types_pov_proto_rawDescGZIP(), []int{6}
}

func (x *PovAuxHeader) GetAuxMerkleBranch() []string {
	if x != nil {
		return x.AuxMerkleBranch
	}
	return nil
}

func (x *PovAuxHeader) GetAuxMerkleIndex() int32 {
	if x != nil {
		return x.AuxMerkleIndex
	}
	return 0
}

func (x *PovAuxHeader) GetParCoinBaseTx() *PovBtcTx {
	if x != nil {
		return x.ParCoinBaseTx
	}
	return nil
}

func (x *PovAuxHeader) GetParCoinBaseMerkle() []string {
	if x != nil {
		return x.ParCoinBaseMerkle
	}
	return nil
}

func (x *PovAuxHeader) GetParMerkleIndex() int32 {
	if x != nil {
		return x.ParMerkleIndex
	}
	return 0
}

func (x *PovAuxHeader) GetParBlockHeader() *PovBtcHeader {
	if x != nil {
		return x.ParBlockHeader
	}
	return nil
}

func (x *PovAuxHeader) GetParentHash() string {
	if x != nil {
		return x.ParentHash
	}
	return ""
}

type PovBtcTx struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version  int32          `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	TxIn     []*PovBtcTxIn  `protobuf:"bytes,2,rep,name=txIn,proto3" json:"txIn,omitempty"`
	TxOut    []*PovBtcTxOut `protobuf:"bytes,3,rep,name=txOut,proto3" json:"txOut,omitempty"`
	LockTime uint32         `protobuf:"varint,4,opt,name=lockTime,proto3" json:"lockTime,omitempty"`
}

func (x *PovBtcTx) Reset() {
	*x = PovBtcTx{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_pov_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PovBtcTx) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PovBtcTx) ProtoMessage() {}

func (x *PovBtcTx) ProtoReflect() protoreflect.Message {
	mi := &file_types_pov_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PovBtcTx.ProtoReflect.Descriptor instead.
func (*PovBtcTx) Descriptor() ([]byte, []int) {
	return file_types_pov_proto_rawDescGZIP(), []int{7}
}

func (x *PovBtcTx) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *PovBtcTx) GetTxIn() []*PovBtcTxIn {
	if x != nil {
		return x.TxIn
	}
	return nil
}

func (x *PovBtcTx) GetTxOut() []*PovBtcTxOut {
	if x != nil {
		return x.TxOut
	}
	return nil
}

func (x *PovBtcTx) GetLockTime() uint32 {
	if x != nil {
		return x.LockTime
	}
	return 0
}

type PovBtcTxIn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PreviousOutPoint *PovBtcOutPoint `protobuf:"bytes,1,opt,name=previousOutPoint,proto3" json:"previousOutPoint,omitempty"`
	SignatureScript  string          `protobuf:"bytes,2,opt,name=signatureScript,proto3" json:"signatureScript,omitempty"` //[]byte
	Sequence         uint32          `protobuf:"varint,3,opt,name=sequence,proto3" json:"sequence,omitempty"`
}

func (x *PovBtcTxIn) Reset() {
	*x = PovBtcTxIn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_pov_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PovBtcTxIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PovBtcTxIn) ProtoMessage() {}

func (x *PovBtcTxIn) ProtoReflect() protoreflect.Message {
	mi := &file_types_pov_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PovBtcTxIn.ProtoReflect.Descriptor instead.
func (*PovBtcTxIn) Descriptor() ([]byte, []int) {
	return file_types_pov_proto_rawDescGZIP(), []int{8}
}

func (x *PovBtcTxIn) GetPreviousOutPoint() *PovBtcOutPoint {
	if x != nil {
		return x.PreviousOutPoint
	}
	return nil
}

func (x *PovBtcTxIn) GetSignatureScript() string {
	if x != nil {
		return x.SignatureScript
	}
	return ""
}

func (x *PovBtcTxIn) GetSequence() uint32 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

type PovBtcOutPoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hash  string `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	Index uint32 `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
}

func (x *PovBtcOutPoint) Reset() {
	*x = PovBtcOutPoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_pov_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PovBtcOutPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PovBtcOutPoint) ProtoMessage() {}

func (x *PovBtcOutPoint) ProtoReflect() protoreflect.Message {
	mi := &file_types_pov_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PovBtcOutPoint.ProtoReflect.Descriptor instead.
func (*PovBtcOutPoint) Descriptor() ([]byte, []int) {
	return file_types_pov_proto_rawDescGZIP(), []int{9}
}

func (x *PovBtcOutPoint) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *PovBtcOutPoint) GetIndex() uint32 {
	if x != nil {
		return x.Index
	}
	return 0
}

type PovBtcTxOut struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value    int64  `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	PkScript string `protobuf:"bytes,2,opt,name=pkScript,proto3" json:"pkScript,omitempty"` //[]byte
}

func (x *PovBtcTxOut) Reset() {
	*x = PovBtcTxOut{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_pov_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PovBtcTxOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PovBtcTxOut) ProtoMessage() {}

func (x *PovBtcTxOut) ProtoReflect() protoreflect.Message {
	mi := &file_types_pov_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PovBtcTxOut.ProtoReflect.Descriptor instead.
func (*PovBtcTxOut) Descriptor() ([]byte, []int) {
	return file_types_pov_proto_rawDescGZIP(), []int{10}
}

func (x *PovBtcTxOut) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *PovBtcTxOut) GetPkScript() string {
	if x != nil {
		return x.PkScript
	}
	return ""
}

type PovBtcHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version    uint32 `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	Previous   string `protobuf:"bytes,2,opt,name=previous,proto3" json:"previous,omitempty"`
	MerkleRoot string `protobuf:"bytes,3,opt,name=merkleRoot,proto3" json:"merkleRoot,omitempty"`
	Timestamp  uint32 `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Bits       uint32 `protobuf:"varint,5,opt,name=bits,proto3" json:"bits,omitempty"`
	Nonce      uint32 `protobuf:"varint,6,opt,name=nonce,proto3" json:"nonce,omitempty"`
}

func (x *PovBtcHeader) Reset() {
	*x = PovBtcHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_pov_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PovBtcHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PovBtcHeader) ProtoMessage() {}

func (x *PovBtcHeader) ProtoReflect() protoreflect.Message {
	mi := &file_types_pov_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PovBtcHeader.ProtoReflect.Descriptor instead.
func (*PovBtcHeader) Descriptor() ([]byte, []int) {
	return file_types_pov_proto_rawDescGZIP(), []int{11}
}

func (x *PovBtcHeader) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *PovBtcHeader) GetPrevious() string {
	if x != nil {
		return x.Previous
	}
	return ""
}

func (x *PovBtcHeader) GetMerkleRoot() string {
	if x != nil {
		return x.MerkleRoot
	}
	return ""
}

func (x *PovBtcHeader) GetTimestamp() uint32 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *PovBtcHeader) GetBits() uint32 {
	if x != nil {
		return x.Bits
	}
	return 0
}

func (x *PovBtcHeader) GetNonce() uint32 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

type PovCoinBaseTx struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version   uint32              `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	TxIns     []*PovCoinBaseTxIn  `protobuf:"bytes,2,rep,name=txIns,proto3" json:"txIns,omitempty"`
	TxOuts    []*PovCoinBaseTxOut `protobuf:"bytes,3,rep,name=txOuts,proto3" json:"txOuts,omitempty"`
	StateHash string              `protobuf:"bytes,4,opt,name=stateHash,proto3" json:"stateHash,omitempty"`
	TxNum     uint32              `protobuf:"varint,5,opt,name=txNum,proto3" json:"txNum,omitempty"`
	Hash      string              `protobuf:"bytes,6,opt,name=Hash,proto3" json:"Hash,omitempty"`
}

func (x *PovCoinBaseTx) Reset() {
	*x = PovCoinBaseTx{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_pov_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PovCoinBaseTx) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PovCoinBaseTx) ProtoMessage() {}

func (x *PovCoinBaseTx) ProtoReflect() protoreflect.Message {
	mi := &file_types_pov_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PovCoinBaseTx.ProtoReflect.Descriptor instead.
func (*PovCoinBaseTx) Descriptor() ([]byte, []int) {
	return file_types_pov_proto_rawDescGZIP(), []int{12}
}

func (x *PovCoinBaseTx) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *PovCoinBaseTx) GetTxIns() []*PovCoinBaseTxIn {
	if x != nil {
		return x.TxIns
	}
	return nil
}

func (x *PovCoinBaseTx) GetTxOuts() []*PovCoinBaseTxOut {
	if x != nil {
		return x.TxOuts
	}
	return nil
}

func (x *PovCoinBaseTx) GetStateHash() string {
	if x != nil {
		return x.StateHash
	}
	return ""
}

func (x *PovCoinBaseTx) GetTxNum() uint32 {
	if x != nil {
		return x.TxNum
	}
	return 0
}

func (x *PovCoinBaseTx) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

type PovCoinBaseTxIn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PrevTxHash string `protobuf:"bytes,1,opt,name=PrevTxHash,proto3" json:"PrevTxHash,omitempty"`
	PrevTxIdx  uint32 `protobuf:"varint,2,opt,name=PrevTxIdx,proto3" json:"PrevTxIdx,omitempty"`
	Extra      string `protobuf:"bytes,3,opt,name=Extra,proto3" json:"Extra,omitempty"` //[]byte
	Sequence   uint32 `protobuf:"varint,4,opt,name=Sequence,proto3" json:"Sequence,omitempty"`
}

func (x *PovCoinBaseTxIn) Reset() {
	*x = PovCoinBaseTxIn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_pov_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PovCoinBaseTxIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PovCoinBaseTxIn) ProtoMessage() {}

func (x *PovCoinBaseTxIn) ProtoReflect() protoreflect.Message {
	mi := &file_types_pov_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PovCoinBaseTxIn.ProtoReflect.Descriptor instead.
func (*PovCoinBaseTxIn) Descriptor() ([]byte, []int) {
	return file_types_pov_proto_rawDescGZIP(), []int{13}
}

func (x *PovCoinBaseTxIn) GetPrevTxHash() string {
	if x != nil {
		return x.PrevTxHash
	}
	return ""
}

func (x *PovCoinBaseTxIn) GetPrevTxIdx() uint32 {
	if x != nil {
		return x.PrevTxIdx
	}
	return 0
}

func (x *PovCoinBaseTxIn) GetExtra() string {
	if x != nil {
		return x.Extra
	}
	return ""
}

func (x *PovCoinBaseTxIn) GetSequence() uint32 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

type PovCoinBaseTxOut struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value   int64  `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	Address string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *PovCoinBaseTxOut) Reset() {
	*x = PovCoinBaseTxOut{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_pov_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PovCoinBaseTxOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PovCoinBaseTxOut) ProtoMessage() {}

func (x *PovCoinBaseTxOut) ProtoReflect() protoreflect.Message {
	mi := &file_types_pov_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PovCoinBaseTxOut.ProtoReflect.Descriptor instead.
func (*PovCoinBaseTxOut) Descriptor() ([]byte, []int) {
	return file_types_pov_proto_rawDescGZIP(), []int{14}
}

func (x *PovCoinBaseTxOut) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *PovCoinBaseTxOut) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type PovBlock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header *PovHeader `protobuf:"bytes,1,opt,name=Header,proto3" json:"Header,omitempty"`
	Body   *PovBody   `protobuf:"bytes,2,opt,name=Body,proto3" json:"Body,omitempty"`
}

func (x *PovBlock) Reset() {
	*x = PovBlock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_pov_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PovBlock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PovBlock) ProtoMessage() {}

func (x *PovBlock) ProtoReflect() protoreflect.Message {
	mi := &file_types_pov_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PovBlock.ProtoReflect.Descriptor instead.
func (*PovBlock) Descriptor() ([]byte, []int) {
	return file_types_pov_proto_rawDescGZIP(), []int{15}
}

func (x *PovBlock) GetHeader() *PovHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *PovBlock) GetBody() *PovBody {
	if x != nil {
		return x.Body
	}
	return nil
}

type PovBody struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Txs []*PovTransaction `protobuf:"bytes,1,rep,name=txs,proto3" json:"txs,omitempty"`
}

func (x *PovBody) Reset() {
	*x = PovBody{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_pov_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PovBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PovBody) ProtoMessage() {}

func (x *PovBody) ProtoReflect() protoreflect.Message {
	mi := &file_types_pov_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PovBody.ProtoReflect.Descriptor instead.
func (*PovBody) Descriptor() ([]byte, []int) {
	return file_types_pov_proto_rawDescGZIP(), []int{16}
}

func (x *PovBody) GetTxs() []*PovTransaction {
	if x != nil {
		return x.Txs
	}
	return nil
}

type PovTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hash string `protobuf:"bytes,1,opt,name=Hash,proto3" json:"Hash,omitempty"`
}

func (x *PovTransaction) Reset() {
	*x = PovTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_pov_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PovTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PovTransaction) ProtoMessage() {}

func (x *PovTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_types_pov_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PovTransaction.ProtoReflect.Descriptor instead.
func (*PovTransaction) Descriptor() ([]byte, []int) {
	return file_types_pov_proto_rawDescGZIP(), []int{17}
}

func (x *PovTransaction) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

type PovAccountState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account     string           `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	Balance     int64            `protobuf:"varint,2,opt,name=balance,proto3" json:"balance,omitempty"`
	Vote        int64            `protobuf:"varint,3,opt,name=vote,proto3" json:"vote,omitempty"`
	Network     int64            `protobuf:"varint,4,opt,name=network,proto3" json:"network,omitempty"`
	Storage     int64            `protobuf:"varint,5,opt,name=storage,proto3" json:"storage,omitempty"`
	Oracle      int64            `protobuf:"varint,6,opt,name=oracle,proto3" json:"oracle,omitempty"`
	TokenStates []*PovTokenState `protobuf:"bytes,7,rep,name=tokenStates,proto3" json:"tokenStates,omitempty"`
}

func (x *PovAccountState) Reset() {
	*x = PovAccountState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_pov_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PovAccountState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PovAccountState) ProtoMessage() {}

func (x *PovAccountState) ProtoReflect() protoreflect.Message {
	mi := &file_types_pov_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PovAccountState.ProtoReflect.Descriptor instead.
func (*PovAccountState) Descriptor() ([]byte, []int) {
	return file_types_pov_proto_rawDescGZIP(), []int{18}
}

func (x *PovAccountState) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *PovAccountState) GetBalance() int64 {
	if x != nil {
		return x.Balance
	}
	return 0
}

func (x *PovAccountState) GetVote() int64 {
	if x != nil {
		return x.Vote
	}
	return 0
}

func (x *PovAccountState) GetNetwork() int64 {
	if x != nil {
		return x.Network
	}
	return 0
}

func (x *PovAccountState) GetStorage() int64 {
	if x != nil {
		return x.Storage
	}
	return 0
}

func (x *PovAccountState) GetOracle() int64 {
	if x != nil {
		return x.Oracle
	}
	return 0
}

func (x *PovAccountState) GetTokenStates() []*PovTokenState {
	if x != nil {
		return x.TokenStates
	}
	return nil
}

type PovTokenState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type           string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Hash           string `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
	Representative string `protobuf:"bytes,3,opt,name=representative,proto3" json:"representative,omitempty"`
	Balance        int64  `protobuf:"varint,4,opt,name=balance,proto3" json:"balance,omitempty"`
}

func (x *PovTokenState) Reset() {
	*x = PovTokenState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_pov_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PovTokenState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PovTokenState) ProtoMessage() {}

func (x *PovTokenState) ProtoReflect() protoreflect.Message {
	mi := &file_types_pov_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PovTokenState.ProtoReflect.Descriptor instead.
func (*PovTokenState) Descriptor() ([]byte, []int) {
	return file_types_pov_proto_rawDescGZIP(), []int{19}
}

func (x *PovTokenState) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *PovTokenState) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *PovTokenState) GetRepresentative() string {
	if x != nil {
		return x.Representative
	}
	return ""
}

func (x *PovTokenState) GetBalance() int64 {
	if x != nil {
		return x.Balance
	}
	return 0
}

type PovContractState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StateHash string `protobuf:"bytes,1,opt,name=stateHash,proto3" json:"stateHash,omitempty"`
	CodeHash  string `protobuf:"bytes,2,opt,name=codeHash,proto3" json:"codeHash,omitempty"`
}

func (x *PovContractState) Reset() {
	*x = PovContractState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_pov_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PovContractState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PovContractState) ProtoMessage() {}

func (x *PovContractState) ProtoReflect() protoreflect.Message {
	mi := &file_types_pov_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PovContractState.ProtoReflect.Descriptor instead.
func (*PovContractState) Descriptor() ([]byte, []int) {
	return file_types_pov_proto_rawDescGZIP(), []int{20}
}

func (x *PovContractState) GetStateHash() string {
	if x != nil {
		return x.StateHash
	}
	return ""
}

func (x *PovContractState) GetCodeHash() string {
	if x != nil {
		return x.CodeHash
	}
	return ""
}

type PovTxLookup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockHash   string `protobuf:"bytes,1,opt,name=blockHash,proto3" json:"blockHash,omitempty"`
	BlockHeight uint64 `protobuf:"varint,2,opt,name=blockHeight,proto3" json:"blockHeight,omitempty"`
	TxIndex     uint64 `protobuf:"varint,3,opt,name=txIndex,proto3" json:"txIndex,omitempty"`
}

func (x *PovTxLookup) Reset() {
	*x = PovTxLookup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_pov_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PovTxLookup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PovTxLookup) ProtoMessage() {}

func (x *PovTxLookup) ProtoReflect() protoreflect.Message {
	mi := &file_types_pov_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PovTxLookup.ProtoReflect.Descriptor instead.
func (*PovTxLookup) Descriptor() ([]byte, []int) {
	return file_types_pov_proto_rawDescGZIP(), []int{21}
}

func (x *PovTxLookup) GetBlockHash() string {
	if x != nil {
		return x.BlockHash
	}
	return ""
}

func (x *PovTxLookup) GetBlockHeight() uint64 {
	if x != nil {
		return x.BlockHeight
	}
	return 0
}

func (x *PovTxLookup) GetTxIndex() uint64 {
	if x != nil {
		return x.TxIndex
	}
	return 0
}

type PovTD struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Chain   int64 `protobuf:"varint,1,opt,name=chain,proto3" json:"chain,omitempty"`
	Sha256D int64 `protobuf:"varint,2,opt,name=sha256d,proto3" json:"sha256d,omitempty"`
	Scrypt  int64 `protobuf:"varint,3,opt,name=scrypt,proto3" json:"scrypt,omitempty"`
	X11     int64 `protobuf:"varint,4,opt,name=x11,proto3" json:"x11,omitempty"`
	Hybrid  int64 `protobuf:"varint,5,opt,name=hybrid,proto3" json:"hybrid,omitempty"`
}

func (x *PovTD) Reset() {
	*x = PovTD{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_pov_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PovTD) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PovTD) ProtoMessage() {}

func (x *PovTD) ProtoReflect() protoreflect.Message {
	mi := &file_types_pov_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PovTD.ProtoReflect.Descriptor instead.
func (*PovTD) Descriptor() ([]byte, []int) {
	return file_types_pov_proto_rawDescGZIP(), []int{22}
}

func (x *PovTD) GetChain() int64 {
	if x != nil {
		return x.Chain
	}
	return 0
}

func (x *PovTD) GetSha256D() int64 {
	if x != nil {
		return x.Sha256D
	}
	return 0
}

func (x *PovTD) GetScrypt() int64 {
	if x != nil {
		return x.Scrypt
	}
	return 0
}

func (x *PovTD) GetX11() int64 {
	if x != nil {
		return x.X11
	}
	return 0
}

func (x *PovTD) GetHybrid() int64 {
	if x != nil {
		return x.Hybrid
	}
	return 0
}

type PovMinerStatItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FirstHeight  uint64 `protobuf:"varint,1,opt,name=firstHeight,proto3" json:"firstHeight,omitempty"`
	LastHeight   uint64 `protobuf:"varint,2,opt,name=lastHeight,proto3" json:"lastHeight,omitempty"`
	BlockNum     uint32 `protobuf:"varint,3,opt,name=blockNum,proto3" json:"blockNum,omitempty"`
	RewardAmount int64  `protobuf:"varint,4,opt,name=rewardAmount,proto3" json:"rewardAmount,omitempty"`
	RepBlockNum  uint32 `protobuf:"varint,5,opt,name=repBlockNum,proto3" json:"repBlockNum,omitempty"`
	RepReward    int64  `protobuf:"varint,6,opt,name=repReward,proto3" json:"repReward,omitempty"`
	IsMiner      bool   `protobuf:"varint,7,opt,name=isMiner,proto3" json:"isMiner,omitempty"`
}

func (x *PovMinerStatItem) Reset() {
	*x = PovMinerStatItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_pov_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PovMinerStatItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PovMinerStatItem) ProtoMessage() {}

func (x *PovMinerStatItem) ProtoReflect() protoreflect.Message {
	mi := &file_types_pov_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PovMinerStatItem.ProtoReflect.Descriptor instead.
func (*PovMinerStatItem) Descriptor() ([]byte, []int) {
	return file_types_pov_proto_rawDescGZIP(), []int{23}
}

func (x *PovMinerStatItem) GetFirstHeight() uint64 {
	if x != nil {
		return x.FirstHeight
	}
	return 0
}

func (x *PovMinerStatItem) GetLastHeight() uint64 {
	if x != nil {
		return x.LastHeight
	}
	return 0
}

func (x *PovMinerStatItem) GetBlockNum() uint32 {
	if x != nil {
		return x.BlockNum
	}
	return 0
}

func (x *PovMinerStatItem) GetRewardAmount() int64 {
	if x != nil {
		return x.RewardAmount
	}
	return 0
}

func (x *PovMinerStatItem) GetRepBlockNum() uint32 {
	if x != nil {
		return x.RepBlockNum
	}
	return 0
}

func (x *PovMinerStatItem) GetRepReward() int64 {
	if x != nil {
		return x.RepReward
	}
	return 0
}

func (x *PovMinerStatItem) GetIsMiner() bool {
	if x != nil {
		return x.IsMiner
	}
	return false
}

type PovMinerDayStat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DayIndex   uint32                       `protobuf:"varint,1,opt,name=dayIndex,proto3" json:"dayIndex,omitempty"`
	MinerNum   uint32                       `protobuf:"varint,2,opt,name=minerNum,proto3" json:"minerNum,omitempty"`
	MinerStats map[string]*PovMinerStatItem `protobuf:"bytes,3,rep,name=minerStats,proto3" json:"minerStats,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *PovMinerDayStat) Reset() {
	*x = PovMinerDayStat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_pov_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PovMinerDayStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PovMinerDayStat) ProtoMessage() {}

func (x *PovMinerDayStat) ProtoReflect() protoreflect.Message {
	mi := &file_types_pov_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PovMinerDayStat.ProtoReflect.Descriptor instead.
func (*PovMinerDayStat) Descriptor() ([]byte, []int) {
	return file_types_pov_proto_rawDescGZIP(), []int{24}
}

func (x *PovMinerDayStat) GetDayIndex() uint32 {
	if x != nil {
		return x.DayIndex
	}
	return 0
}

func (x *PovMinerDayStat) GetMinerNum() uint32 {
	if x != nil {
		return x.MinerNum
	}
	return 0
}

func (x *PovMinerDayStat) GetMinerStats() map[string]*PovMinerStatItem {
	if x != nil {
		return x.MinerStats
	}
	return nil
}

type PovDiffDayStat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DayIndex     uint32 `protobuf:"varint,1,opt,name=dayIndex,proto3" json:"dayIndex,omitempty"`
	AvgDiffRatio uint64 `protobuf:"varint,2,opt,name=avgDiffRatio,proto3" json:"avgDiffRatio,omitempty"`
	MaxDiffRatio uint64 `protobuf:"varint,3,opt,name=maxDiffRatio,proto3" json:"maxDiffRatio,omitempty"`
	MinDiffRatio uint64 `protobuf:"varint,4,opt,name=minDiffRatio,proto3" json:"minDiffRatio,omitempty"`
	MaxBlockTime uint32 `protobuf:"varint,5,opt,name=maxBlockTime,proto3" json:"maxBlockTime,omitempty"`
	MinBlockTime uint32 `protobuf:"varint,6,opt,name=minBlockTime,proto3" json:"minBlockTime,omitempty"`
}

func (x *PovDiffDayStat) Reset() {
	*x = PovDiffDayStat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_pov_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PovDiffDayStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PovDiffDayStat) ProtoMessage() {}

func (x *PovDiffDayStat) ProtoReflect() protoreflect.Message {
	mi := &file_types_pov_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PovDiffDayStat.ProtoReflect.Descriptor instead.
func (*PovDiffDayStat) Descriptor() ([]byte, []int) {
	return file_types_pov_proto_rawDescGZIP(), []int{25}
}

func (x *PovDiffDayStat) GetDayIndex() uint32 {
	if x != nil {
		return x.DayIndex
	}
	return 0
}

func (x *PovDiffDayStat) GetAvgDiffRatio() uint64 {
	if x != nil {
		return x.AvgDiffRatio
	}
	return 0
}

func (x *PovDiffDayStat) GetMaxDiffRatio() uint64 {
	if x != nil {
		return x.MaxDiffRatio
	}
	return 0
}

func (x *PovDiffDayStat) GetMinDiffRatio() uint64 {
	if x != nil {
		return x.MinDiffRatio
	}
	return 0
}

func (x *PovDiffDayStat) GetMaxBlockTime() uint32 {
	if x != nil {
		return x.MaxBlockTime
	}
	return 0
}

func (x *PovDiffDayStat) GetMinBlockTime() uint32 {
	if x != nil {
		return x.MinBlockTime
	}
	return 0
}

var File_types_pov_proto protoreflect.FileDescriptor

var file_types_pov_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x70, 0x6f, 0x76, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x05, 0x74, 0x79, 0x70, 0x65, 0x73, 0x22, 0xe6, 0x01, 0x0a, 0x10, 0x50, 0x6f, 0x76,
	0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x12,
	0x20, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x12, 0x4d, 0x0a, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x48, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x50, 0x6f, 0x76, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x1a, 0x3f, 0x0a, 0x11, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0xcb, 0x01, 0x0a, 0x0f, 0x50, 0x6f, 0x76, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x6f,
	0x72, 0x61, 0x63, 0x6c, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x24, 0x0a,
	0x0d, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x48, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x48,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x76, 0x65, 0x72,
	0x69, 0x66, 0x69, 0x65, 0x64, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x76,
	0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0e, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x6f, 0x6e, 0x75, 0x73, 0x46, 0x65, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x62, 0x6f, 0x6e, 0x75, 0x73, 0x46, 0x65, 0x65, 0x22,
	0xe7, 0x01, 0x0a, 0x0b, 0x50, 0x6f, 0x76, 0x52, 0x65, 0x70, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x62, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x76, 0x6f, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x76, 0x6f, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6f,
	0x72, 0x61, 0x63, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x72, 0x61,
	0x63, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x3a, 0x0a, 0x0c, 0x50, 0x6f, 0x76,
	0x52, 0x65, 0x70, 0x53, 0x74, 0x61, 0x74, 0x65, 0x73, 0x12, 0x2a, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x50, 0x6f, 0x76, 0x52, 0x65, 0x70, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x73, 0x22, 0x90, 0x01, 0x0a, 0x09, 0x50, 0x6f, 0x76, 0x48, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x06, 0x62, 0x61, 0x73, 0x48, 0x64, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x50, 0x6f, 0x76, 0x42,
	0x61, 0x73, 0x65, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x62, 0x61, 0x73, 0x48, 0x64,
	0x72, 0x12, 0x2b, 0x0a, 0x06, 0x61, 0x75, 0x78, 0x48, 0x64, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x50, 0x6f, 0x76, 0x41, 0x75, 0x78,
	0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x61, 0x75, 0x78, 0x48, 0x64, 0x72, 0x12, 0x28,
	0x0a, 0x04, 0x63, 0x62, 0x54, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x2e, 0x50, 0x6f, 0x76, 0x43, 0x6f, 0x69, 0x6e, 0x42, 0x61, 0x73, 0x65,
	0x54, 0x78, 0x52, 0x04, 0x63, 0x62, 0x54, 0x78, 0x22, 0xd9, 0x01, 0x0a, 0x0d, 0x50, 0x6f, 0x76,
	0x42, 0x61, 0x73, 0x65, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73,
	0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x65, 0x72, 0x6b, 0x6c, 0x65, 0x52, 0x6f, 0x6f, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x65, 0x72, 0x6b, 0x6c, 0x65, 0x52, 0x6f, 0x6f, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x12,
	0x0a, 0x04, 0x62, 0x69, 0x74, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x62, 0x69,
	0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x16, 0x0a, 0x06,
	0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x68, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x22, 0xca, 0x02, 0x0a, 0x0c, 0x50, 0x6f, 0x76, 0x41, 0x75, 0x78, 0x48,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x28, 0x0a, 0x0f, 0x61, 0x75, 0x78, 0x4d, 0x65, 0x72, 0x6b,
	0x6c, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0f,
	0x61, 0x75, 0x78, 0x4d, 0x65, 0x72, 0x6b, 0x6c, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x12,
	0x26, 0x0a, 0x0e, 0x61, 0x75, 0x78, 0x4d, 0x65, 0x72, 0x6b, 0x6c, 0x65, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x61, 0x75, 0x78, 0x4d, 0x65, 0x72, 0x6b,
	0x6c, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x35, 0x0a, 0x0d, 0x70, 0x61, 0x72, 0x43, 0x6f,
	0x69, 0x6e, 0x42, 0x61, 0x73, 0x65, 0x54, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x50, 0x6f, 0x76, 0x42, 0x74, 0x63, 0x54, 0x78, 0x52,
	0x0d, 0x70, 0x61, 0x72, 0x43, 0x6f, 0x69, 0x6e, 0x42, 0x61, 0x73, 0x65, 0x54, 0x78, 0x12, 0x2c,
	0x0a, 0x11, 0x70, 0x61, 0x72, 0x43, 0x6f, 0x69, 0x6e, 0x42, 0x61, 0x73, 0x65, 0x4d, 0x65, 0x72,
	0x6b, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x11, 0x70, 0x61, 0x72, 0x43, 0x6f,
	0x69, 0x6e, 0x42, 0x61, 0x73, 0x65, 0x4d, 0x65, 0x72, 0x6b, 0x6c, 0x65, 0x12, 0x26, 0x0a, 0x0e,
	0x70, 0x61, 0x72, 0x4d, 0x65, 0x72, 0x6b, 0x6c, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x70, 0x61, 0x72, 0x4d, 0x65, 0x72, 0x6b, 0x6c, 0x65, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x12, 0x3b, 0x0a, 0x0e, 0x70, 0x61, 0x72, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x2e, 0x50, 0x6f, 0x76, 0x42, 0x74, 0x63, 0x48, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x52, 0x0e, 0x70, 0x61, 0x72, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x48, 0x61, 0x73, 0x68, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x48, 0x61, 0x73,
	0x68, 0x22, 0x91, 0x01, 0x0a, 0x08, 0x50, 0x6f, 0x76, 0x42, 0x74, 0x63, 0x54, 0x78, 0x12, 0x18,
	0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x04, 0x74, 0x78, 0x49, 0x6e,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x50,
	0x6f, 0x76, 0x42, 0x74, 0x63, 0x54, 0x78, 0x49, 0x6e, 0x52, 0x04, 0x74, 0x78, 0x49, 0x6e, 0x12,
	0x28, 0x0a, 0x05, 0x74, 0x78, 0x4f, 0x75, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x50, 0x6f, 0x76, 0x42, 0x74, 0x63, 0x54, 0x78, 0x4f,
	0x75, 0x74, 0x52, 0x05, 0x74, 0x78, 0x4f, 0x75, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63,
	0x6b, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x6c, 0x6f, 0x63,
	0x6b, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x95, 0x01, 0x0a, 0x0a, 0x50, 0x6f, 0x76, 0x42, 0x74, 0x63,
	0x54, 0x78, 0x49, 0x6e, 0x12, 0x41, 0x0a, 0x10, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73,
	0x4f, 0x75, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x50, 0x6f, 0x76, 0x42, 0x74, 0x63, 0x4f, 0x75, 0x74,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x10, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x4f,
	0x75, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x73, 0x69, 0x67, 0x6e, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x53, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x22, 0x3a, 0x0a,
	0x0e, 0x50, 0x6f, 0x76, 0x42, 0x74, 0x63, 0x4f, 0x75, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68,
	0x61, 0x73, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x3f, 0x0a, 0x0b, 0x50, 0x6f, 0x76,
	0x42, 0x74, 0x63, 0x54, 0x78, 0x4f, 0x75, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x6b, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x70, 0x6b, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x22, 0xac, 0x01, 0x0a, 0x0c, 0x50,
	0x6f, 0x76, 0x42, 0x74, 0x63, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75,
	0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x65, 0x72, 0x6b, 0x6c, 0x65, 0x52, 0x6f, 0x6f, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x65, 0x72, 0x6b, 0x6c, 0x65, 0x52, 0x6f, 0x6f,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12,
	0x12, 0x0a, 0x04, 0x62, 0x69, 0x74, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x62,
	0x69, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x22, 0xd0, 0x01, 0x0a, 0x0d, 0x50, 0x6f,
	0x76, 0x43, 0x6f, 0x69, 0x6e, 0x42, 0x61, 0x73, 0x65, 0x54, 0x78, 0x12, 0x18, 0x0a, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x05, 0x74, 0x78, 0x49, 0x6e, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x50, 0x6f, 0x76,
	0x43, 0x6f, 0x69, 0x6e, 0x42, 0x61, 0x73, 0x65, 0x54, 0x78, 0x49, 0x6e, 0x52, 0x05, 0x74, 0x78,
	0x49, 0x6e, 0x73, 0x12, 0x2f, 0x0a, 0x06, 0x74, 0x78, 0x4f, 0x75, 0x74, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x50, 0x6f, 0x76, 0x43,
	0x6f, 0x69, 0x6e, 0x42, 0x61, 0x73, 0x65, 0x54, 0x78, 0x4f, 0x75, 0x74, 0x52, 0x06, 0x74, 0x78,
	0x4f, 0x75, 0x74, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x74, 0x65, 0x48, 0x61, 0x73,
	0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74, 0x65, 0x48, 0x61,
	0x73, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x78, 0x4e, 0x75, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x74, 0x78, 0x4e, 0x75, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x48, 0x61, 0x73, 0x68,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x48, 0x61, 0x73, 0x68, 0x22, 0x81, 0x01, 0x0a,
	0x0f, 0x50, 0x6f, 0x76, 0x43, 0x6f, 0x69, 0x6e, 0x42, 0x61, 0x73, 0x65, 0x54, 0x78, 0x49, 0x6e,
	0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x72, 0x65, 0x76, 0x54, 0x78, 0x48, 0x61, 0x73, 0x68, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x50, 0x72, 0x65, 0x76, 0x54, 0x78, 0x48, 0x61, 0x73, 0x68,
	0x12, 0x1c, 0x0a, 0x09, 0x50, 0x72, 0x65, 0x76, 0x54, 0x78, 0x49, 0x64, 0x78, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x09, 0x50, 0x72, 0x65, 0x76, 0x54, 0x78, 0x49, 0x64, 0x78, 0x12, 0x14,
	0x0a, 0x05, 0x45, 0x78, 0x74, 0x72, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45,
	0x78, 0x74, 0x72, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65,
	0x22, 0x42, 0x0a, 0x10, 0x50, 0x6f, 0x76, 0x43, 0x6f, 0x69, 0x6e, 0x42, 0x61, 0x73, 0x65, 0x54,
	0x78, 0x4f, 0x75, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x22, 0x58, 0x0a, 0x08, 0x50, 0x6f, 0x76, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x12, 0x28, 0x0a, 0x06, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x50, 0x6f, 0x76, 0x48, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x52, 0x06, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x04, 0x42, 0x6f,
	0x64, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x2e, 0x50, 0x6f, 0x76, 0x42, 0x6f, 0x64, 0x79, 0x52, 0x04, 0x42, 0x6f, 0x64, 0x79, 0x22, 0x32,
	0x0a, 0x07, 0x50, 0x6f, 0x76, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x27, 0x0a, 0x03, 0x74, 0x78, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x50,
	0x6f, 0x76, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x03, 0x74,
	0x78, 0x73, 0x22, 0x24, 0x0a, 0x0e, 0x50, 0x6f, 0x76, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x48, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x48, 0x61, 0x73, 0x68, 0x22, 0xdd, 0x01, 0x0a, 0x0f, 0x50, 0x6f, 0x76,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x76, 0x6f, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x76, 0x6f, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x72, 0x61, 0x63,
	0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65,
	0x12, 0x36, 0x0a, 0x0b, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x73, 0x18,
	0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x50, 0x6f,
	0x76, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0b, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x73, 0x22, 0x79, 0x0a, 0x0d, 0x50, 0x6f, 0x76, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x61, 0x73,
	0x68, 0x12, 0x26, 0x0a, 0x0e, 0x72, 0x65, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x61, 0x74,
	0x69, 0x76, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x65, 0x70, 0x72, 0x65,
	0x73, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x76, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x62, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x22, 0x4c, 0x0a, 0x10, 0x50, 0x6f, 0x76, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x48, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x48, 0x61, 0x73, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x64, 0x65, 0x48, 0x61, 0x73,
	0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x64, 0x65, 0x48, 0x61, 0x73,
	0x68, 0x22, 0x67, 0x0a, 0x0b, 0x50, 0x6f, 0x76, 0x54, 0x78, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70,
	0x12, 0x1c, 0x0a, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x12, 0x20,
	0x0a, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x74, 0x78, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x07, 0x74, 0x78, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x79, 0x0a, 0x05, 0x50, 0x6f,
	0x76, 0x54, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x68, 0x61,
	0x32, 0x35, 0x36, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x68, 0x61, 0x32,
	0x35, 0x36, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x63, 0x72, 0x79, 0x70, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x63, 0x72, 0x79, 0x70, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x78,
	0x31, 0x31, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x78, 0x31, 0x31, 0x12, 0x16, 0x0a,
	0x06, 0x68, 0x79, 0x62, 0x72, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x68,
	0x79, 0x62, 0x72, 0x69, 0x64, 0x22, 0xee, 0x01, 0x0a, 0x10, 0x50, 0x6f, 0x76, 0x4d, 0x69, 0x6e,
	0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x20, 0x0a, 0x0b, 0x66, 0x69,
	0x72, 0x73, 0x74, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0b, 0x66, 0x69, 0x72, 0x73, 0x74, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1e, 0x0a, 0x0a,
	0x6c, 0x61, 0x73, 0x74, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c,
	0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b,
	0x72, 0x65, 0x70, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0b, 0x72, 0x65, 0x70, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x12, 0x1c,
	0x0a, 0x09, 0x72, 0x65, 0x70, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x72, 0x65, 0x70, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x69, 0x73, 0x4d, 0x69, 0x6e, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69,
	0x73, 0x4d, 0x69, 0x6e, 0x65, 0x72, 0x22, 0xe9, 0x01, 0x0a, 0x0f, 0x50, 0x6f, 0x76, 0x4d, 0x69,
	0x6e, 0x65, 0x72, 0x44, 0x61, 0x79, 0x53, 0x74, 0x61, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61,
	0x79, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x64, 0x61,
	0x79, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x4e,
	0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x4e,
	0x75, 0x6d, 0x12, 0x46, 0x0a, 0x0a, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x50,
	0x6f, 0x76, 0x4d, 0x69, 0x6e, 0x65, 0x72, 0x44, 0x61, 0x79, 0x53, 0x74, 0x61, 0x74, 0x2e, 0x4d,
	0x69, 0x6e, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a,
	0x6d, 0x69, 0x6e, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x73, 0x1a, 0x56, 0x0a, 0x0f, 0x4d, 0x69,
	0x6e, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x2d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x50, 0x6f, 0x76, 0x4d, 0x69, 0x6e, 0x65, 0x72, 0x53,
	0x74, 0x61, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0xe0, 0x01, 0x0a, 0x0e, 0x50, 0x6f, 0x76, 0x44, 0x69, 0x66, 0x66, 0x44, 0x61,
	0x79, 0x53, 0x74, 0x61, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x79, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x64, 0x61, 0x79, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x76, 0x67, 0x44, 0x69, 0x66, 0x66, 0x52, 0x61, 0x74, 0x69,
	0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x61, 0x76, 0x67, 0x44, 0x69, 0x66, 0x66,
	0x52, 0x61, 0x74, 0x69, 0x6f, 0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x61, 0x78, 0x44, 0x69, 0x66, 0x66,
	0x52, 0x61, 0x74, 0x69, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x6d, 0x61, 0x78,
	0x44, 0x69, 0x66, 0x66, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x69, 0x6e,
	0x44, 0x69, 0x66, 0x66, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0c, 0x6d, 0x69, 0x6e, 0x44, 0x69, 0x66, 0x66, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x12, 0x22, 0x0a,
	0x0c, 0x6d, 0x61, 0x78, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0c, 0x6d, 0x61, 0x78, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x69, 0x6e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x6d, 0x69, 0x6e, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x54, 0x69, 0x6d, 0x65, 0x42, 0x37, 0x5a, 0x35, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x71, 0x6c, 0x63, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2f, 0x67, 0x6f, 0x2d,
	0x71, 0x6c, 0x63, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x3b, 0x74, 0x79, 0x70, 0x65, 0x73, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_types_pov_proto_rawDescOnce sync.Once
	file_types_pov_proto_rawDescData = file_types_pov_proto_rawDesc
)

func file_types_pov_proto_rawDescGZIP() []byte {
	file_types_pov_proto_rawDescOnce.Do(func() {
		file_types_pov_proto_rawDescData = protoimpl.X.CompressGZIP(file_types_pov_proto_rawDescData)
	})
	return file_types_pov_proto_rawDescData
}

var file_types_pov_proto_msgTypes = make([]protoimpl.MessageInfo, 28)
var file_types_pov_proto_goTypes = []interface{}{
	(*PovVerifierState)(nil), // 0: types.PovVerifierState
	(*PovPublishState)(nil),  // 1: types.PovPublishState
	(*PovRepState)(nil),      // 2: types.PovRepState
	(*PovRepStates)(nil),     // 3: types.PovRepStates
	(*PovHeader)(nil),        // 4: types.PovHeader
	(*PovBaseHeader)(nil),    // 5: types.PovBaseHeader
	(*PovAuxHeader)(nil),     // 6: types.PovAuxHeader
	(*PovBtcTx)(nil),         // 7: types.PovBtcTx
	(*PovBtcTxIn)(nil),       // 8: types.PovBtcTxIn
	(*PovBtcOutPoint)(nil),   // 9: types.PovBtcOutPoint
	(*PovBtcTxOut)(nil),      // 10: types.PovBtcTxOut
	(*PovBtcHeader)(nil),     // 11: types.PovBtcHeader
	(*PovCoinBaseTx)(nil),    // 12: types.PovCoinBaseTx
	(*PovCoinBaseTxIn)(nil),  // 13: types.PovCoinBaseTxIn
	(*PovCoinBaseTxOut)(nil), // 14: types.PovCoinBaseTxOut
	(*PovBlock)(nil),         // 15: types.PovBlock
	(*PovBody)(nil),          // 16: types.PovBody
	(*PovTransaction)(nil),   // 17: types.PovTransaction
	(*PovAccountState)(nil),  // 18: types.PovAccountState
	(*PovTokenState)(nil),    // 19: types.PovTokenState
	(*PovContractState)(nil), // 20: types.PovContractState
	(*PovTxLookup)(nil),      // 21: types.PovTxLookup
	(*PovTD)(nil),            // 22: types.PovTD
	(*PovMinerStatItem)(nil), // 23: types.PovMinerStatItem
	(*PovMinerDayStat)(nil),  // 24: types.PovMinerDayStat
	(*PovDiffDayStat)(nil),   // 25: types.PovDiffDayStat
	nil,                      // 26: types.PovVerifierState.ActiveHeightEntry
	nil,                      // 27: types.PovMinerDayStat.MinerStatsEntry
}
var file_types_pov_proto_depIdxs = []int32{
	26, // 0: types.PovVerifierState.activeHeight:type_name -> types.PovVerifierState.ActiveHeightEntry
	2,  // 1: types.PovRepStates.states:type_name -> types.PovRepState
	5,  // 2: types.PovHeader.basHdr:type_name -> types.PovBaseHeader
	6,  // 3: types.PovHeader.auxHdr:type_name -> types.PovAuxHeader
	12, // 4: types.PovHeader.cbTx:type_name -> types.PovCoinBaseTx
	7,  // 5: types.PovAuxHeader.parCoinBaseTx:type_name -> types.PovBtcTx
	11, // 6: types.PovAuxHeader.parBlockHeader:type_name -> types.PovBtcHeader
	8,  // 7: types.PovBtcTx.txIn:type_name -> types.PovBtcTxIn
	10, // 8: types.PovBtcTx.txOut:type_name -> types.PovBtcTxOut
	9,  // 9: types.PovBtcTxIn.previousOutPoint:type_name -> types.PovBtcOutPoint
	13, // 10: types.PovCoinBaseTx.txIns:type_name -> types.PovCoinBaseTxIn
	14, // 11: types.PovCoinBaseTx.txOuts:type_name -> types.PovCoinBaseTxOut
	4,  // 12: types.PovBlock.Header:type_name -> types.PovHeader
	16, // 13: types.PovBlock.Body:type_name -> types.PovBody
	17, // 14: types.PovBody.txs:type_name -> types.PovTransaction
	19, // 15: types.PovAccountState.tokenStates:type_name -> types.PovTokenState
	27, // 16: types.PovMinerDayStat.minerStats:type_name -> types.PovMinerDayStat.MinerStatsEntry
	23, // 17: types.PovMinerDayStat.MinerStatsEntry.value:type_name -> types.PovMinerStatItem
	18, // [18:18] is the sub-list for method output_type
	18, // [18:18] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_types_pov_proto_init() }
func file_types_pov_proto_init() {
	if File_types_pov_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_types_pov_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PovVerifierState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_pov_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PovPublishState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_pov_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PovRepState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_pov_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PovRepStates); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_pov_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PovHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_pov_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PovBaseHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_pov_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PovAuxHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_pov_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PovBtcTx); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_pov_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PovBtcTxIn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_pov_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PovBtcOutPoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_pov_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PovBtcTxOut); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_pov_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PovBtcHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_pov_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PovCoinBaseTx); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_pov_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PovCoinBaseTxIn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_pov_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PovCoinBaseTxOut); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_pov_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PovBlock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_pov_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PovBody); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_pov_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PovTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_pov_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PovAccountState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_pov_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PovTokenState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_pov_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PovContractState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_pov_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PovTxLookup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_pov_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PovTD); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_pov_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PovMinerStatItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_pov_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PovMinerDayStat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_pov_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PovDiffDayStat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_types_pov_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   28,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_types_pov_proto_goTypes,
		DependencyIndexes: file_types_pov_proto_depIdxs,
		MessageInfos:      file_types_pov_proto_msgTypes,
	}.Build()
	File_types_pov_proto = out.File
	file_types_pov_proto_rawDesc = nil
	file_types_pov_proto_goTypes = nil
	file_types_pov_proto_depIdxs = nil
}
