syntax = "proto3";
package types;
option go_package = "github.com/qlcchain/go-qlc/rpc/grpc/proto/types;types";

message RewardsInfo  {
    int32  type      = 1;
    string from      = 2;
    string to        = 3;
    string txHeader  = 4;
    string rxHeader  = 5;
    int64  amount    = 6;
}

message DestroyInfo  {
    string Owner      = 1;
    string Previous   = 2;
    string Token      = 3;
    int64  Amount      = 4;
    int64  TimeStamp   = 5;
}

message DestroyInfos {
    repeated DestroyInfo infos = 1;
}

message NEP5PledgeInfo  {
    int32  pType        = 1;
    int64  Amount       = 2;
    int64  WithdrawTime = 3;
    string Beneficial   = 4;
    string PledgeAddress  = 5;
    string NEP5TxId       = 6;
}

message Contractor {
    string Address  = 1;
    string Name     = 2;
}

message ContractService  {
    string serviceId    = 1;
    uint64 mcc          = 2;
    uint64 mnc          = 3;
    uint64 totalAmount  = 4;
    double unitPrice    = 5;
    string currency     = 6;
}

message StopParam  {
    string contractAddress = 1;
    string stopName        = 2;
}

message UpdateStopParam  {
    string contractAddress = 1;
    string stopName        = 2;
    string newName         = 3;
}


message ContractParam  {
    CreateContractParam contractParam  = 1;
    repeated string preStops     = 2;
    repeated string nextStops    = 3;
    int64    confirmDate         = 4;
    int32    status       = 5;
    Terminator      terminator   = 6;
}

message CreateContractParam  {
    Contractor partyA     = 1;
    Contractor partyB     = 2;
    string     Previous   = 3;
    repeated ContractService services  = 4;
    int64 signDate        = 5;
    int64 startDate       = 6;
    int64 endDate         = 7;
}

message Terminator  {
    string address  = 1;
    bool   request  = 2;
}

message Asset  {
    uint64 mcc          = 1;
    uint64 mnc          = 2 ;
    uint64 totalAmount  = 3;
    repeated SLA sla    = 4;
}

message SLA  {
    int32 type        = 1;
    int32 priority     = 2;
    float value       = 3;
    repeated Compensation compensations = 4;
}

message  Compensation  {
    float low   = 1;
    float high  = 2;
    float rate  = 3;
}

message AssetParam  {
    Contractor owner        = 1;
    repeated Asset assets   = 2;
    int64    signDate       = 3;
    int64    startDate      = 4;
    int64    endDate        = 5;
    int32    status      = 6;
    string   address        = 7;
}

message TerminateParam  {
    string contractAddress  = 1;
    bool   request          = 2;
}

message CDRStatus  {
    map<string, CDRParams> Params = 1;
    int32 status  = 2;
}

message CDRParam  {
    uint64 index          = 1;
    int64  smsDt          = 2;
    string account        = 3;
    string sender         = 4;
    string customer       = 5;
    string destination    = 6;
    int32  sendingStatus  = 7;
    int32  dlrStatus      = 8;
    string preStop        = 9;
    string nextStop       = 10;
}

message CDRParams{
    repeated CDRParam cdrParams = 1;
}

message SummaryRecord  {
    uint64 total    = 1;
    uint64 success  = 2;
    uint64 fail     = 3;
    double result   = 4;
}

message  MatchingRecord  {
   SummaryRecord orphan    = 1;
   SummaryRecord matching  = 2;
}

message CompareRecord  {
  map<string, MatchingRecord> records = 1;
}

message SummaryResult{
    ContractParam contract = 1;
    map<string,CompareRecord> records = 2;
    CompareRecord total   = 3;
}

message MultiPartySummaryResult{
    repeated ContractParam    contracts = 1;
    map<string,CompareRecord> records   = 2;
    CompareRecord total   = 3;
}



message InvoiceRecord  {
  string Address            = 1;
  int64 StartDate           = 2;
  int64 EndDate             = 3;
  string Customer           = 4;
  string CustomerSr         = 5;
  string Country            = 6;
  string Operator           = 7;
  string ServiceId          = 8;
  uint64 MCC                = 9;
  uint64 MNC                = 10;
  string Currency           = 11;
  double UnitPrice          = 12;
  uint64 SumOfBillableSMSCustomer = 13;
  double SumOfTOTPrice            = 14;
}

