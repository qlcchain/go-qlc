syntax = "proto3";
package proto;

import "google/api/annotations.proto";
import "common.proto";
import "types/basic.proto";
import "types/pov.proto";


option go_package = ".;proto";

service RepAPI {
    rpc GetRewardData (RepRewardParam) returns (Bytes) {
        option (google.api.http) = {
           post: "/rep/getRewardData"
           body: "*"
       };
    }

    rpc UnpackRewardData (Bytes) returns (RepRewardParam) {
        option (google.api.http) = {
           post: "/rep/unpackRewardData"
           body: "*"
       };
    }

    rpc GetAvailRewardInfo (types.Address) returns (RepAvailRewardInfo) {
        option (google.api.http) = {
           post: "/rep/getAvailRewardInfo"
           body: "*"
       };
    }

    rpc GetRewardSendBlock (RepRewardParam) returns (types.StateBlock) {
        option (google.api.http) = {
           post: "/rep/getRewardSendBlock"
           body: "*"
       };
    }

    rpc GetRewardRecvBlock (types.StateBlock) returns (types.StateBlock) {
        option (google.api.http) = {
           post: "/rep/getRewardRecvBlock"
           body: "*"
       };
    }

    rpc GetRewardRecvBlockBySendHash (types.Hash) returns (types.StateBlock) {
        option (google.api.http) = {
           post: "/rep/getRewardRecvBlockBySendHash"
           body: "*"
       };
    }

    rpc GetRepStateWithHeight (RepStateParams) returns (types.PovRepState) {
        option (google.api.http) = {
           post: "/rep/getRepStateWithHeight"
           body: "*"
       };
    }

    rpc GetRewardHistory (types.Address) returns (RepHistoryRewardInfo) {
        option (google.api.http) = {
           post: "/rep/getRewardHistory"
           body: "*"
       };
    }
}


message  RepRewardParam  {
    string account       = 1;
    string beneficial    = 2;
    uint64 startHeight   = 3;
    uint64 endHeight     = 4;
    uint64 rewardBlocks  = 5;
    int64  rewardAmount  = 6;
}

message RepAvailRewardInfo  {
    uint64 lastEndHeight      = 1;
    uint64 latestBlockHeight  = 2;
    uint64 nodeRewardHeight   = 3;
    uint64 availStartHeight   = 4;
    uint64 availEndHeight     = 5;
    uint64 availRewardBlocks  = 6;
    int64  availRewardAmount  = 7;
    bool   needCallReward     = 8;
}

message RepHistoryRewardInfo  {
    uint64 lastEndHeight  = 1;
    uint64 rewardBlocks   = 2;
    int64  rewardAmount   = 3;
    int64  lastRewardTime = 4;
}

message RepStateParams  {
    string account  = 1;
    uint64 height   = 2;
}